{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useFonts } from 'expo-font';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { CSS_CONSTS, HEIGHT, WIDTH } from \"../constants\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useFonts = useFonts({\n    'Reem-Kufi': require(\"../assets/fonts/ReemKufi-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fonts = _useFonts2[0];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setpassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setusername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setemail = _useState6[1];\n\n  if (!fonts) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      style: styles.loginScreen\n    }, React.createElement(Text, {\n      style: styles.title,\n      onPress: function onPress() {\n        return props.navigation.navigate('Home');\n      }\n    }, \"logme\"), React.createElement(View, {\n      style: styles.userInputs\n    }, React.createElement(View, {\n      style: styles.usernameInput\n    }, React.createElement(FontAwesome5, {\n      name: \"user\",\n      size: 24,\n      color: \"black\",\n      style: styles.icon\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(e) {\n        return setusername(e);\n      },\n      value: username,\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      placeholder: 'Username'\n    })), React.createElement(View, {\n      style: styles.passwordInput\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"form-textbox-password\",\n      size: 24,\n      color: \"black\",\n      style: styles.icon\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(e) {\n        return setpassword(e);\n      },\n      value: password,\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      placeholder: 'Password'\n    })), React.createElement(View, {\n      style: styles.emailInput\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"email-outline\",\n      size: 24,\n      color: \"black\",\n      style: styles.icon\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(e) {\n        return setemail(e);\n      },\n      value: email,\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      placeholder: 'Email'\n    }))), React.createElement(TouchableOpacity, {\n      style: styles.login\n    }, React.createElement(Text, {\n      style: styles.loginText,\n      onPress: function onPress() {\n        return props.navigation.navigate('Login');\n      }\n    }, \"Register\")));\n  }\n};\n\nvar styles = StyleSheet.create({\n  loginScreen: {\n    height: HEIGHT,\n    width: WIDTH,\n    flex: 1,\n    alignItems: 'center'\n  },\n  title: {\n    color: CSS_CONSTS.PRIMARY_COLOR,\n    fontSize: 48,\n    marginTop: '40%',\n    fontFamily: 'Reem-Kufi'\n  },\n  userInputs: {\n    marginTop: '30%',\n    width: '80%',\n    height: '30%',\n    justifyContent: 'center'\n  },\n  icon: {\n    paddingHorizontal: 15,\n    paddingTop: 25\n  },\n  usernameInput: {\n    flex: 1,\n    flexDirection: 'row',\n    borderColor: CSS_CONSTS.PRIMARY_COLOR,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  passwordInput: {\n    flex: 1,\n    flexDirection: 'row',\n    borderColor: CSS_CONSTS.PRIMARY_COLOR,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 20\n  },\n  emailInput: {\n    flex: 1,\n    flexDirection: 'row',\n    borderColor: CSS_CONSTS.PRIMARY_COLOR,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  input: {\n    flex: 1,\n    width: '100%',\n    fontSize: 24,\n    fontFamily: 'Reem-Kufi'\n  },\n  login: {\n    marginTop: '17%',\n    width: '50%',\n    height: '7%',\n    paddingTop: 4,\n    borderColor: CSS_CONSTS.PRIMARY_COLOR,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  loginText: {\n    fontSize: 28,\n    textAlign: 'center',\n    color: CSS_CONSTS.PRIMARY_COLOR,\n    fontFamily: 'Reem-Kufi'\n  },\n  signupText: {\n    marginTop: 10,\n    fontSize: 18,\n    textAlign: 'center',\n    color: CSS_CONSTS.PRIMARY_COLOR,\n    fontFamily: 'Reem-Kufi'\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["/Users/ananthsalagundi/Documents/GitHub/LogMe/logme-frontend/screens/RegisterScreen.jsx"],"names":["FontAwesome5","MaterialCommunityIcons","useFonts","React","useState","CSS_CONSTS","HEIGHT","WIDTH","RegisterScreen","props","require","fonts","password","setpassword","username","setusername","email","setemail","styles","loginScreen","title","navigation","navigate","userInputs","usernameInput","icon","input","e","passwordInput","emailInput","login","loginText","StyleSheet","create","height","width","flex","alignItems","color","PRIMARY_COLOR","fontSize","marginTop","fontFamily","justifyContent","paddingHorizontal","paddingTop","flexDirection","borderColor","borderWidth","borderRadius","marginBottom","textAlign","signupText"],"mappings":"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","sourcesContent":["import { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useFonts } from 'expo-font';\nimport React, { useState } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\nimport { CSS_CONSTS, HEIGHT, WIDTH } from '../constants';\n\nconst RegisterScreen = (props) => {\n\tlet [ fonts ] = useFonts({\n\t\t'Reem-Kufi': require('../assets/fonts/ReemKufi-Regular.ttf')\n\t});\n\tconst [ password, setpassword ] = useState('');\n\tconst [ username, setusername ] = useState('');\n\tconst [ email, setemail ] = useState('');\n\n\tif (!fonts) {\n\t\treturn null;\n\t} else {\n\t\treturn (\n\t\t\t<View style={styles.loginScreen}>\n\t\t\t\t<Text style={styles.title} onPress={() => props.navigation.navigate('Home')}>\n\t\t\t\t\tlogme\n\t\t\t\t</Text>\n\t\t\t\t<View style={styles.userInputs}>\n\t\t\t\t\t<View style={styles.usernameInput}>\n\t\t\t\t\t\t<FontAwesome5 name=\"user\" size={24} color=\"black\" style={styles.icon} />\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\tonChangeText={(e) => setusername(e)}\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\t\tplaceholder={'Username'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.passwordInput}>\n\t\t\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\t\t\tname=\"form-textbox-password\"\n\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\tcolor=\"black\"\n\t\t\t\t\t\t\tstyle={styles.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\tonChangeText={(e) => setpassword(e)}\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\t\tplaceholder={'Password'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={styles.emailInput}>\n\t\t\t\t\t\t<MaterialCommunityIcons\n\t\t\t\t\t\t\tname=\"email-outline\"\n\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\tcolor=\"black\"\n\t\t\t\t\t\t\tstyle={styles.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\tonChangeText={(e) => setemail(e)}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\t\tplaceholder={'Email'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<TouchableOpacity style={styles.login}>\n\t\t\t\t\t<Text style={styles.loginText} onPress={() => props.navigation.navigate('Login')}>\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t);\n\t}\n};\n\nconst styles = StyleSheet.create({\n\tloginScreen: {\n\t\theight: HEIGHT,\n\t\twidth: WIDTH,\n\t\tflex: 1,\n\t\talignItems: 'center'\n\t},\n\ttitle: {\n\t\tcolor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tfontSize: 48,\n\t\tmarginTop: '40%',\n\t\tfontFamily: 'Reem-Kufi'\n\t},\n\tuserInputs: {\n\t\tmarginTop: '30%',\n\t\twidth: '80%',\n\t\theight: '30%',\n\t\tjustifyContent: 'center'\n\t},\n\ticon: {\n\t\tpaddingHorizontal: 15,\n\t\tpaddingTop: 25\n\t},\n\tusernameInput: {\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\tborderColor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tborderWidth: 1,\n\t\tborderRadius: 5,\n\t\tmarginBottom: 20\n\t},\n\tpasswordInput: {\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\tborderColor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tborderWidth: 1,\n\t\tborderRadius: 5,\n\t\tmarginBottom: 20\n\t},\n\temailInput: {\n\t\tflex: 1,\n\t\tflexDirection: 'row',\n\t\tborderColor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tborderWidth: 1,\n\t\tborderRadius: 5\n\t},\n\tinput: {\n\t\tflex: 1,\n\t\twidth: '100%',\n\t\tfontSize: 24,\n\t\tfontFamily: 'Reem-Kufi'\n\t},\n\tlogin: {\n\t\tmarginTop: '17%',\n\t\twidth: '50%',\n\t\theight: '7%',\n\t\tpaddingTop: 4,\n\t\tborderColor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tborderWidth: 1,\n\t\tborderRadius: 5\n\t},\n\tloginText: {\n\t\tfontSize: 28,\n\t\ttextAlign: 'center',\n\t\tcolor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tfontFamily: 'Reem-Kufi'\n\t},\n\tsignupText: {\n\t\tmarginTop: 10,\n\t\tfontSize: 18,\n\t\ttextAlign: 'center',\n\t\tcolor: CSS_CONSTS.PRIMARY_COLOR,\n\t\tfontFamily: 'Reem-Kufi'\n\t}\n});\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}